{
  "properties_names": [
    "hasConfiguaration",
    "hasSupervisedLearning",
    "hasNeuralLanguageProcessing",
    "describesTrainingMethod",
    "hasTransformer",
    "hasUnsupervisedLearning",
    "hasHardware",
    "hasReinforcementLearning",
    "hasOperatingSystem",
    "hasComputerVision",
    "hasRecurrentNeuralNetwork",
    "hasAutoencoder",
    "hasConvolutionalNeuralNetwork",
    "describeApplicationType",
    "hasFramework",
    "includeLibraries",
    "hasSpeechRecognition",
    "include",
    "describeNetworkType",
    "hasDataset"
  ],
  "entities_names": {
    "SupervisedLearning": [
      "Gradient Boosting",
      "Bayesian Linear Regression",
      "Naive Bayes",
      "Support Vector Machines (SVM)",
      "Non-Linear Regression",
      "Linear Regression",
      "Deep Neural Networks",
      "K-Nearest Neighbor (KNN)",
      "Polynomial Regression",
      "Linear Discriminant Analysis (LDA)",
      "Neural Networks",
      "Random Forest",
      "Logistic Regression",
      "Regression Trees",
      "Decision Trees"
    ],
    "UnsupervisedLearning": [
      "K-Means Clustering",
      "Isolation Forest",
      "Wake Sleep Algorithm",
      "Deep Neural Networks (e.g., Generative Adversarial Networks, Variational Autoencoders)",
      "Method of Moments",
      "Contrastive Divergence",
      "Eclat Algorithm",
      "Boltzmann Machines",
      "Apriori Algorithm",
      "Local Outlier Factor (LOF)",
      "Principal Component Analysis (PCA)",
      "Hierarchical Clustering",
      "DBSCAN (Density-Based Spatial Clustering of Applications with Noise)",
      "Independent Component Analysis (ICA)",
      "Autoencoders",
      "Expectation-Maximization Algorithm (EM)",
      "Self-Organizing Maps (SOM)",
      "Adaptive Resonance Theory (ART)",
      "FP-Growth Algorithm",
      "Spike-Timing-Dependent Plasticity (STDP)"
    ],
    "Framework": [
      "Hugging Face Transformers",
      "PyTorch",
      "CNTK (Microsoft Cognitive Toolkit)",
      "Keras",
      "TensorFlow",
      "Chainer",
      "Theano",
      "TensorFlow.js",
      "DeepLearning4J",
      "Caffe",
      "Jax",
      "Torch",
      "MXNet"
    ],
    "PowerSupply": [
      "EVGA SuperNOVA 1600 T2",
      "Seasonic Prime TX-1600",
      "EVGA SuperNOVA 850 G5",
      "Corsair RM850x",
      "Cooler Master MWE Gold 650",
      "Thermaltake Smart 500W",
      "Corsair CV450",
      "EVGA 500 W1",
      "Seasonic Focus GX-850",
      "Corsair RM650x",
      "Corsair AX1600i"
    ],
    "RAM": [
      "Kingston Fury Beast DDR5",
      "Samsung DDR4 ECC RDIMM",
      "Crucial ECC Registered DDR4 RAM",
      "Corsair Vengeance LPX",
      "G.Skill Trident Z Neo"
    ],
    "GPU": [
      "Radeon Pro W6800",
      "NVIDIA GTX 1080Ti",
      "AMD Ryzen 7 5800G",
      "NVIDIA GeForce RTX 4090",
      "NVIDIA GeForce RTX 4070 Ti",
      "NVIDIA GeForce RTX 4080",
      "Intel Iris Xe Graphics",
      "NVIDIA GeForce RTX 3060 Ti",
      "Quadro RTX 6000",
      "Quadro RTX 8000",
      "Radeon RX 7900 XTX",
      "Radeon RX 6700 XT",
      "Radeon Pro W5700",
      "AMD Ryzen 5 5600G",
      "Radeon RX 6800 XT",
      "Quadro P2000"
    ],
    "NaturalLanguageProcessing": [
      "Text Classification",
      "Market Intelligence and Lead Scoring",
      "Automatic Image Captioning",
      "Text Generation",
      "Speech Recognition",
      "Named Entity Recognition (NER)",
      "Recommender Systems",
      "Email Filters",
      "Spell Check and Grammar Correction",
      "Machine Translation",
      "Chatbots and Virtual Assistants",
      "Sentiment Analysis",
      "Biometric Text Analysis",
      "Abstractive Text Summarization",
      "Social Media Monitoring",
      "Auto-correction",
      "Predictive Text Modeling",
	   "Information Extraction"
    ],
    "SpeechRecognition": [
      "Intent Recognition",
      "Disfluency Detection and Correction",
      "Data Augmentation",
      "Speaker Diarization",
      "Multimodal Integration",
      "Mapping Phonetic Units",
      "Converting Colloquial Expressions",
      "Multilingual Support",
      "Error Correction",
      "Continuous Learning",
      "Pronunciation Modeling",
      "Personalization",
      "Sentiment Analysis",
      "Estimating Word Sequences",
      "Language Modeling",
      "Contextual Understanding"
    ],
    "Autoencoder": [
      "Denoising Autoencoder",
      "Seq2Seq Autoencoder",
      "Variational Autoencoder",
      "Sparse Autoencoder",
      "Stacked Autoencoder",
      "Undercomplete Autoencoder",
      "Adversarial Autoencoder",
      "Contractive Autoencoder"
    ],
    "ConvolutionNeuralNetwork": [
      "GoogLeNet",
      "ResNet",
      "YOLO",
      "MobileNet",
      "UNet",
      "AlexNet",
      "EfficientNet",
      "VGGNet",
      "R-CNN",
      "LeNet",
      "DenseNet"
    ],
    "Storage": [
      "Micron 9300 Pro",
      "Seagate FireCuda 530",
      "Samsung 980 Pro",
      "Intel Optane SSD P5800X",
      "Samsung 870 EVO",
      "WD Black SN850",
      "Crucial MX500"
    ],
    "ReinforcementLearning": [
      "Deep Deterministic Policy Gradient (DDPG)",
      "Advantage-Weighted Regression (AWR)",
      "Deep Q-Networks (DQN)",
      "Trust Region Policy Optimization (TRPO)",
      "Maximum a Posteriori Policy Optimisation (MPO)",
      "Actor-Critic (AC/A2C)",
      "Deep Recurrent Q-Networks (DRQN)",
      "QT-Opt (including Cross-entropy Method)",
      "Phasic Policy Gradient (PPG)",
      "Dueling DQN",
      "Double DQN",
      "Twin Delayed DDPG (TD3)",
      "Proximal Policy Optimization (PPO)",
      "Soft Actor-Critic (SAC)"
    ]
  }
}